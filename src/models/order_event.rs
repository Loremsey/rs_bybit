use crate::prelude::*;

/// Represents an event containing order updates from Bybit’s WebSocket API.
///
/// This struct is used to receive real-time order updates via Bybit’s private WebSocket stream (https://bybit-exchange.github.io/docs/v5/websocket/private/order).
/// In perpetual futures trading, real-time order events are critical for bots to react to market changes, manage positions, and execute strategies dynamically.
#[derive(Serialize, Deserialize, Debug, Clone)]
#[serde(rename_all = "camelCase")]
pub struct OrderEvent {
    /// Unique identifier for the WebSocket event.
    ///
    /// This ID allows bots to track and correlate WebSocket messages, ensuring no events are missed or duplicated.
    /// **Bot Implication**: Bots use `id` to maintain message integrity and debug WebSocket connectivity issues.
    pub id: String,

    /// The WebSocket topic, e.g., "order".
    ///
    /// This identifies the type of data in the event, allowing bots to route messages to the appropriate handler (https://bybit-exchange.github.io/docs/v5/websocket/private/order).
    /// **Bot Implication**: Bots filter on `topic` to process order updates efficiently, ignoring irrelevant streams.
    pub topic: String,

    /// Timestamp of the event, in milliseconds since Unix epoch.
    ///
    /// This records when the event was generated by Bybit, critical for latency analysis and event sequencing (https://bybit-exchange.github.io/docs/v5/websocket/private/order).
    /// **Bot Implication**: Bots use `creation_time` to measure system performance and ensure timely processing of order updates.
    pub creation_time: u64,

    /// List of order data updates included in the event.
    ///
    /// This contains one or more `OrderData` structs, each representing an updated order (https://bybit-exchange.github.io/docs/v5/websocket/private/order).
    /// **Bot Implication**: Bots iterate through `data` to process multiple order updates in a single event, optimizing performance in high-frequency trading.
    pub data: Vec<OrderData>,
}
